"""Typings for queries generated by aiosql"""

from typing import Dict, Optional, Sequence

from asyncpg import Connection, Record

class SamplesQueriesMixin:
    async def get_sample_by_uuid(
        self, conn: Connection, *, uuid: str
    ) -> Record: ...
    async def get_sample_by_uuid_in_db(
        self, conn: Connection, *, uuid: str
    ) -> Record: ...
    async def create_sample(
        self, conn: Connection, name: str, task: str
    ) -> Record: ...
    async def update_sample(
        self,
        conn: Connection,
        uuid: str,
        new_name: str,
        new_task: str,
    ) -> Record: ...
    async def delete_sample(
        self,
        conn: Connection,
        uuid: str,
    ) -> None: ...
    async def remove_sample(
        self,
        conn: Connection,
        uuid: str,
    ) -> None: ...

class UsersQueriesMixin:
    async def get_user_by_uuid(
        self, conn: Connection, *, uuid: str
    ) -> Record: ...
    async def get_user_by_uuid_in_db(
        self, conn: Connection, *, uuid: str
    ) -> Record: ...
    async def create_user(
        self, conn: Connection, email: str, password: str
    ) -> Record: ...
    async def update_user(
        self,
        conn: Connection,
        uuid: str,
        new_email: str,
        new_password: str,
    ) -> Record: ...
    async def delete_user(
        self,
        conn: Connection,
        uuid: str,
    ) -> None: ...
    async def remove_user(
        self,
        conn: Connection,
        uuid: str,
    ) -> None: ...

class Queries(SamplesQueriesMixin, UsersQueriesMixin): ...

queries: Queries
